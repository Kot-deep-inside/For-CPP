
#include <iostream>
#include <math.h>
#include <string>
#include <vector>
#include <cstring>
#include <cmath>

using namespace std;

class Point2D 
{
public:
	Point2D(double x, double y);
	string toString();
	double distanceTo(Point2D that);
	double get_x();
	double get_y();
private:
	double x;
	double y;
};
Point2D::Point2D(double x, double y)
{
	this->x = x;
	this->y = y;
}
string Point2D::toString()
{
	return to_string(this->x) + " " + to_string(this->y);
}
double Point2D::get_x()
{
	return this->x;
}
double Point2D::get_y()
{
	return this->y;
}
double Point2D::distanceTo(Point2D that)
{
	double result;
	result = sqrt(pow((that.x - this->x),2) +  pow((that.y - this->y),2));
	return result;
}
vector<string> split(string line, char c)
{
	vector<string> result;
	string tmpstr = "";
	for (int i = 0; i < line.length(); i++)
	{
		if (line[i] != c)
			tmpstr += line[i];
		else
		{
			result.push_back(tmpstr);
			tmpstr = "";
		}
	}

	if (line[line.length() - 1] != ' ')
		result.push_back(tmpstr);

	return result;
}
char* deleteComma(char str[ ])
{
	string *strStr = new string();
	for (int i = 0; i < strlen(str)+1; i++)
	{
		if (str[i] != ',')
			strStr->push_back(str[i]);
	}
	char* result = const_cast<char*>(strStr->c_str());
	return result;
}
int main()
{
	double x1, x2, y1, y2;
	char* firstPoint = new char[100];
	char* secondPoint = new char[100];
	cout << "Enterthe first point: ";
	cin.getline(firstPoint, 100);
	firstPoint = deleteComma(firstPoint);
	cout << "Enter the second point: ";
	cin.getline(secondPoint, 100);
	secondPoint = deleteComma(secondPoint);
	vector<string> first = split(firstPoint, ' ');
    vector<string> second = split(secondPoint, ' ');
	Point2D point1(atof(first[0].c_str()), atof(first[1].c_str()));
	Point2D point2(atof(second[0].c_str()), atof(second[1].c_str()));
	double distance = point1.distanceTo(point2);
	cout << distance;
	return 0;
}
