#include <iostream>
#include <string>
#include <vector>

using namespace std;
class IPAddress
{
protected:
	string ipAdd;
public:
	IPAddress(string ip)
	{
		this->ipAdd = ip;
	}
	virtual void print();
};
void IPAddress::print()
{
	cout << this->ipAdd;
}
class IPAddressChecked : public IPAddress
{
private:
	bool cor;
public:
	IPAddressChecked(string ip) : IPAddress(ip) 
	{ }
	void print() override
	{
		IPAddress::print();
		vector<string> separator;
		string str;
		for (int i = 0; i < ipAdd.length(); i++) {
		    if(ipAdd[i]=='.'){
		       separator.push_back(str);
		       str="";continue;
		    } 
		    str+=ipAdd[i];
		    if(1+i==ipAdd.length())separator.push_back(str);
		}
		if (separator.size() != 4)
		{
			this->cor = false;
		}
		else
		{
			for (int i = 0; i < separator.size(); i++)
			{
				if (atoi(separator[i].c_str()) < 0 || atoi(separator[i].c_str()) > 255)
				{
					this->cor = false;
					break;
				}
				this->cor = true;
			}
		}
		if (this->cor)
			cout << " - Correct";
		else
			cout << " - Not correct";
	}
};
int main()
{string firstIP, secondIP, thirdIP;
	cout << "Enter the first ip-address: ";
	cin >> firstIP;
	IPAddress* first = new IPAddress(firstIP);
	first->print();
	cout << "\n Enter the second ip-address: ";
	cin >> secondIP;
	IPAddressChecked* second = new IPAddressChecked(secondIP);
	second->print();
	cout << "\n Enter the third ip-address: ";
	cin >>thirdIP;
	IPAddressChecked* third = new IPAddressChecked(thirdIP);
	third->print();
    return 0;
}
