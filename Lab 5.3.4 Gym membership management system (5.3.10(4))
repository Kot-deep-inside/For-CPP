#include <iostream>

using namespace std;
class FitMember{
    public:
    void printStatus();
    void setValid(int valid){this->valid=valid;}
    void setName(char* name){this->name=name;}
    int getId(){return id;}
    void setId(int id){this->id=id;}
    private:
    int id;
    char* name;
    int valid;
};
void FitMember::printStatus(){
    printf("Member %d: %s , subscription valid for %d months\n", this->id, this->name, this->valid);
}
int main()
{int n=1,id,maxID=0,valid;
bool break1=false;
string command="";
char* name;
    FitMember member[n];
    while(command!="quit"){
         if(maxID!=0)
for (int i = 1; i <= maxID; i++) {
    member[i].printStatus();
}
    cout << "What would you like to do?: ";
		cin >> command;
		if (command == "quit")
			break;

		if(command!="create"||command!="cancel")cout << "Enter the number: ";
		int numb;
		if (command == "add")
		{
			cin >> numb;
			cout << "Enter the Id: ";
			cin >> id;
			

		}
		else if (command == "cancel")
		{
			
			cout << "Enter the Id: ";
			cin >> id;
			
		}
		else if (command == "create"){

		    cout << "Enter the Id: ";
		    cin >> id;
		     for (int i = 1; i < 10; i++) {
		        if(member[i].getId()==id){
		        cout<<"Cannot perform this operation, this id is already in use\n";
		            break1=true;
		        }
		    }
			if(break1==false){
			    maxID++;
		member[maxID].setId(id);
		    cout << "Provide member valid: ";
            cin >> valid;
            member[maxID].setValid(valid);
			cout << "Provide member name: ";
			   cin >> name; 
			    member[maxID].setName(name);
			}
			else break1= false;
		    }else
		{
			printf("Cannot perform this operation, invalid command\n");
		}
		}
		
    return 0;
}

